{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Desktop/web-dev/social-media-app/src/components/create-post/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport classes from \"./CreatePost.module.css\";\nimport { UserContext } from \"../../context/userContext\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport { CreatePostUploadBtn } from \"../../ui/button/Button\";\nimport { makeid } from \"../../helper/functions\";\nimport { storage, db, timestamp } from \"../../firebase/firebase\";\nimport firebase from \"firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    cameraIcon: {\n      [theme.breakpoints.only(\"lg\")]: {\n        fontSize: \"0.8rem\"\n      }\n    }\n  };\n});\n\nconst CreatePost = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const postRef = useRef();\n  const imageRef = useRef();\n  const classes = useStyles(theme);\n\n  const onChangeHandler = () => {\n    if (imageRef.current.files[0]) {\n      setImage(imageRef.current.files[0]); //getting the url selected image\n\n      let selectedImageURL = URL.createObjectURL(imageRef.current.files[0]); //getting the image element so that we can set the src for it\n\n      let imageElement = document.getElementById(\"image_preview\"); //setting the src for the image element\n\n      imageElement.src = selectedImageURL; //initially we have set image as null in case no image is selected it will use a fallback, we dont want that\n      //now will set the image display property\n\n      imageElement.style.display = \"block\";\n    }\n  };\n\n  const onUploadHandler = () => {\n    //checks for image availability\n    if (image) {\n      //make random image name\n      let imageName = makeid(10); //create a placeholder for new image and then put the received imaged in above\n\n      const uploadTask = storage.ref(`images/${imageName}.jpg`).put(image); //listen to the uploaded image\n\n      uploadTask.on(\"state_changed\", snapshot => {\n        let uploadProgress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(uploadProgress);\n      }, error => {\n        console.log(error);\n      }, () => {\n        //grab the uploaded image url and put it in the database\n        storage.ref(\"images\").child(`${imageName}.jpg`).getDownloadURL().then(imageUrl => {\n          db.collection(\"posts\").add({\n            caption: caption,\n            photoUrl: imageUrl,\n            profileUrl: user.photoURL,\n            timestamp: timestamp,\n            username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\n            likes: 0\n          });\n        });\n        setCaption(\"\");\n        setProgress(0);\n        let imageElement = document.getElementById(\"image_preview\");\n        imageElement.style.display = \"none\";\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createPost,\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPost_main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPost_textarea_container,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: () => {\n            setCaption(postRef.current.value);\n          },\n          name: \"create_post_field\",\n          id: \"create_post_field\",\n          placeholder: \"enter caption here..\",\n          value: caption,\n          ref: postRef,\n          cols: \"70\",\n          rows: \"4\",\n          className: classes.createPost_textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.createPost_image_preview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            id: \"image_preview\",\n            className: classes.image_preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPost_image_uploader_container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image_uploader_input\",\n          children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {\n            className: useStyles.cameraIcon,\n            style: {\n              fontSize: \"1.2rem\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image_uploader_input\",\n          type: \"file\",\n          accept: \"image/*\",\n          ref: imageRef,\n          onChange: onChangeHandler,\n          className: classes.createPost_image_uploader_input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreatePostUploadBtn, {\n          caption: caption,\n          progress: progress,\n          onUploadHandler: onUploadHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"WqhQiyhNJT5KjXxR9ZChsN0aRQw=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/parth/Desktop/web-dev/social-media-app/src/components/create-post/CreatePost.js"],"names":["React","useContext","useRef","useState","classes","UserContext","AddAPhotoIcon","CreatePostUploadBtn","makeid","storage","db","timestamp","firebase","makeStyles","useStyles","theme","cameraIcon","breakpoints","only","fontSize","CreatePost","user","setUser","caption","setCaption","image","setImage","progress","setProgress","postRef","imageRef","onChangeHandler","current","files","selectedImageURL","URL","createObjectURL","imageElement","document","getElementById","src","style","display","onUploadHandler","imageName","uploadTask","ref","put","on","snapshot","uploadProgress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","imageUrl","collection","add","photoUrl","profileUrl","photoURL","username","email","replace","toLowerCase","likes","createPost","createPost_main_container","createPost_textarea_container","value","createPost_textarea","createPost_image_preview","image_preview","createPost_image_uploader_container","cursor","createPost_image_uploader_input"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\nimport classes from \"./CreatePost.module.css\";\nimport { UserContext } from \"../../context/userContext\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport { CreatePostUploadBtn } from \"../../ui/button/Button\";\nimport { makeid } from \"../../helper/functions\";\nimport { storage, db, timestamp } from \"../../firebase/firebase\";\nimport firebase from \"firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    cameraIcon: {\n      [theme.breakpoints.only(\"lg\")]: {\n        fontSize: \"0.8rem\",\n      },\n    },\n  };\n});\n\nconst CreatePost = () => {\n  const [user, setUser] = useContext(UserContext).user;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const postRef = useRef();\n  const imageRef = useRef();\n\n  const classes = useStyles(theme);\n\n  const onChangeHandler = () => {\n    if (imageRef.current.files[0]) {\n      setImage(imageRef.current.files[0]);\n\n      //getting the url selected image\n      let selectedImageURL = URL.createObjectURL(imageRef.current.files[0]);\n\n      //getting the image element so that we can set the src for it\n      let imageElement = document.getElementById(\"image_preview\");\n\n      //setting the src for the image element\n      imageElement.src = selectedImageURL;\n\n      //initially we have set image as null in case no image is selected it will use a fallback, we dont want that\n      //now will set the image display property\n      imageElement.style.display = \"block\";\n    }\n  };\n\n  const onUploadHandler = () => {\n    //checks for image availability\n    if (image) {\n      //make random image name\n      let imageName = makeid(10);\n      //create a placeholder for new image and then put the received imaged in above\n      const uploadTask = storage.ref(`images/${imageName}.jpg`).put(image);\n\n      //listen to the uploaded image\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          let uploadProgress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(uploadProgress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          //grab the uploaded image url and put it in the database\n          storage\n            .ref(\"images\")\n            .child(`${imageName}.jpg`)\n            .getDownloadURL()\n            .then((imageUrl) => {\n              db.collection(\"posts\").add({\n                caption: caption,\n                photoUrl: imageUrl,\n                profileUrl: user.photoURL,\n                timestamp: timestamp,\n                username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\n                likes: 0,\n              });\n            });\n          setCaption(\"\");\n          setProgress(0);\n          let imageElement = document.getElementById(\"image_preview\");\n          imageElement.style.display = \"none\";\n        }\n      );\n    }\n  };\n\n  return (\n    <div className={classes.createPost}>\n      {user && (\n        <div className={classes.createPost_main_container}>\n          <h4>Create post</h4>\n          <div className={classes.createPost_textarea_container}>\n            <textarea\n              onChange={() => {\n                setCaption(postRef.current.value);\n              }}\n              name=\"create_post_field\"\n              id=\"create_post_field\"\n              placeholder=\"enter caption here..\"\n              value={caption}\n              ref={postRef}\n              cols=\"70\"\n              rows=\"4\"\n              className={classes.createPost_textarea}\n            ></textarea>\n            <div className={classes.createPost_image_preview}>\n              <img\n                alt=\"\"\n                id=\"image_preview\"\n                className={classes.image_preview}\n              />\n            </div>\n          </div>\n          <div className={classes.createPost_image_uploader_container}>\n            <label htmlFor=\"image_uploader_input\">\n              <AddAPhotoIcon\n                className={useStyles.cameraIcon}\n                style={{\n                  fontSize: \"1.2rem\",\n                  cursor: \"pointer\",\n                }}\n              />\n            </label>\n            <input\n              id=\"image_uploader_input\"\n              type=\"file\"\n              accept=\"image/*\"\n              ref={imageRef}\n              onChange={onChangeHandler}\n              className={classes.createPost_image_uploader_input}\n            />\n            <CreatePostUploadBtn\n              caption={caption}\n              progress={progress}\n              onUploadHandler={onUploadHandler}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}