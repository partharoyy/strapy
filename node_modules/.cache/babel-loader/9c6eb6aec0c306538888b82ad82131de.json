{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Desktop/web-dev/social-media-app/src/components/feed/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport classes from \"./Feed.module.css\";\nimport { Post_Delete_Btn } from \"../../ui/button/Button\";\nimport { UserContext } from \"../../context/userContext\";\nimport Post from \"./post/Post\";\nimport { db, timestamp, storage } from \"../../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = () => {\n  _s();\n\n  const [user] = useContext(UserContext).user;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []);\n\n  const onDeleteHandler = (id, post) => {\n    //targeting\n    let imageRef = storage.refFromURL(post.photoUrl); //deleting the image\n\n    imageRef.delete().then(() => console.log(\"Deleted successfully\")).catch(error => console.log(error.message)); //deleting the post\n\n    db.collection(\"posts\").doc(id).delete().then(() => console.log(\"Deleted successfully\")).catch(error => console.log(error.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: posts.map(({\n      id,\n      post\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.feed,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.feed_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.feed_left_side,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.profileUrl,\n              alt: \"profile_pic\",\n              className: classes.feed_img\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.feed_username,\n              children: post.username\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.feed_right_side,\n            children: post.username !== user.username && /*#__PURE__*/_jsxDEV(Post_Delete_Btn, {\n              onDeleteHandler: () => onDeleteHandler(id, post)\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Post, {\n          id: id,\n          profileUrl: post.profileUrl,\n          username: post.username,\n          imageUrl: post.photoUrl,\n          caption: post.caption,\n          comments: post.comments,\n          user: user,\n          timestamp: post.timestamp,\n          likes: post.likes\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"pecsVXNnCTXVc4Bc92+PiXQjQP4=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/parth/Desktop/web-dev/social-media-app/src/components/feed/Feed.js"],"names":["React","useContext","useState","useEffect","Fragment","classes","Post_Delete_Btn","UserContext","Post","db","timestamp","storage","Feed","user","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","onDeleteHandler","imageRef","refFromURL","photoUrl","delete","then","console","log","catch","error","message","feed","feed_container","feed_left_side","profileUrl","feed_img","Math","random","feed_username","username","feed_right_side","caption","comments","likes"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport classes from \"./Feed.module.css\";\nimport { Post_Delete_Btn } from \"../../ui/button/Button\";\nimport { UserContext } from \"../../context/userContext\";\nimport Post from \"./post/Post\";\nimport { db, timestamp, storage } from \"../../firebase/firebase\";\n\nconst Feed = () => {\n  const [user] = useContext(UserContext).user;\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  const onDeleteHandler = (id, post) => {\n    //targeting\n    let imageRef = storage.refFromURL(post.photoUrl);\n\n    //deleting the image\n    imageRef\n      .delete()\n      .then(() => console.log(\"Deleted successfully\"))\n      .catch((error) => console.log(error.message));\n\n    //deleting the post\n    db.collection(\"posts\")\n      .doc(id)\n      .delete()\n      .then(() => console.log(\"Deleted successfully\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <Fragment>\n      {posts.map(({ id, post }) => {\n        return (\n          <div className={classes.feed}>\n            <div className={classes.feed_container}>\n              <div className={classes.feed_left_side}>\n                <img\n                  key={Math.random()}\n                  src={post.profileUrl}\n                  alt=\"profile_pic\"\n                  className={classes.feed_img}\n                />\n                <p key={Math.random()} className={classes.feed_username}>\n                  {post.username}\n                </p>\n              </div>\n              <div className={classes.feed_right_side}>\n                {post.username !== user.username && (\n                  <Post_Delete_Btn\n                    key={Math.random()}\n                    onDeleteHandler={() => onDeleteHandler(id, post)}\n                  />\n                )}\n              </div>\n            </div>\n            <Post\n              key={id}\n              id={id}\n              profileUrl={post.profileUrl}\n              username={post.username}\n              imageUrl={post.photoUrl}\n              caption={post.caption}\n              comments={post.comments}\n              user={user}\n              timestamp={post.timestamp}\n              likes={post.likes}\n            />\n          </div>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}